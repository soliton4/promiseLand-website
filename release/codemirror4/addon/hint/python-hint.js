//>>built
(function(e){"object"==typeof exports&&"object"==typeof module?e(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define("codemirror4/addon/hint/python-hint",["../../lib/codemirror"],e):e(CodeMirror)})(function(e){function g(b,a){for(var d=0,c=b.length;d<c;++d)a(b[d])}function l(b,a,d){a=b.getCursor();d=b=d(b,a);/^[\w$_]*$/.test(b.string)||(b=d={start:a.ch,end:a.ch,string:"",state:b.state,className:":"==b.string?"python-type":null});if(!c)var c=[];c.push(d);c=m(b,c);c=c.sort();
return{list:c,from:e.Pos(a.line,b.start),to:e.Pos(a.line,b.end)}}function m(b,a){function d(b){var a;if(a=0==b.lastIndexOf(e,0)){a:if(Array.prototype.indexOf)a=-1!=c.indexOf(b);else{for(a=c.length;a--;)if(c[a]===b){a=!0;break a}a=!1}a=!a}a&&c.push(b)}var c=[],e=b.string;if(a){var h=a.pop(),f;for("variable"==h.type?f=h.string:"variable-3"==h.type&&(f=":"+h.string);null!=f&&a.length;)f=f[a.pop().string];null!=f&&(g(n,d),g(p,d),g(q,d),g(k,d))}return c}e.registerHelper("hint","python",function(b){return l(b,
k,function(a,b){return a.getTokenAt(b)})});var q="and del from not while as elif global or with assert else if pass yieldbreak except import print class exec in raise continue finally is return def for lambda try".split(" "),k="AND DEL FROM NOT WHILE AS ELIF GLOBAL OR WITH ASSERT ELSE IF PASS YIELDBREAK EXCEPT IMPORT PRINT CLASS EXEC IN RAISE CONTINUE FINALLY IS RETURN DEF FOR LAMBDA TRY".split(" "),n="abs() divmod() input() open() staticmethod() all() enumerate() int() ord() str() any() eval() isinstance() pow() sum() basestring() execfile() issubclass() print() superbin() file() iter() property() tuple() bool() filter() len() range() typebytearray() float() list() raw_input() unichr() callable() format() locals() reduce() unicodechr() frozenset() long() reload() vars() classmethod() getattr() map() repr() xrangecmp() globals() max() reversed() zip() compile() hasattr() memoryview() round() __import__complex() hash() min() set() apply() delattr() help() next() setattr() bufferdict() hex() object() slice() coerce() dir() id() oct() sorted() intern() ".split(" "),
p="ABS() DIVMOD() INPUT() OPEN() STATICMETHOD() ALL() ENUMERATE() INT() ORD() STR() ANY() EVAL() ISINSTANCE() POW() SUM() BASESTRING() EXECFILE() ISSUBCLASS() PRINT() SUPERBIN() FILE() ITER() PROPERTY() TUPLE() BOOL() FILTER() LEN() RANGE() TYPEBYTEARRAY() FLOAT() LIST() RAW_INPUT() UNICHR() CALLABLE() FORMAT() LOCALS() REDUCE() UNICODECHR() FROZENSET() LONG() RELOAD() VARS() CLASSMETHOD() GETATTR() MAP() REPR() XRANGECMP() GLOBALS() MAX() REVERSED() ZIP() COMPILE() HASATTR() MEMORYVIEW() ROUND() __IMPORT__COMPLEX() HASH() MIN() SET() APPLY() DELATTR() HELP() NEXT() SETATTR() BUFFERDICT() HEX() OBJECT() SLICE() COERCE() DIR() ID() OCT() SORTED() INTERN() ".split(" ")});
//# sourceMappingURL=python-hint.js.map