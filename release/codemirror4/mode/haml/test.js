//>>built
define("codemirror4/mode/haml/test",["dojo","dijit","dojox"],function(c,d,e){(function(){function a(a){test.mode(a,b,Array.prototype.slice.call(arguments,1))}var b=CodeMirror.getMode({tabSize:4,indentUnit:2},"haml");a("elementName","[tag %h1] Hey There");a("oneElementPerLine","[tag %h1] Hey There %h2");a("idSelector","[tag %h1][attribute #test] Hey There");a("classSelector","[tag %h1][attribute .hello] Hey There");a("docType","[tag !!! XML]");a("comment","[comment / Hello WORLD]");a("notComment",
"[tag %h1] This is not a / comment ");a("attributes",'[tag %a]([variable title][operator \x3d][string "test"]){[atom :title] [operator \x3d\x3e] [string "test"]}');a("htmlCode","[tag\x26bracket \x3c][tag h1][tag\x26bracket \x3e]Title[tag\x26bracket \x3c/][tag h1][tag\x26bracket \x3e]");a("rubyBlock","[operator \x3d][variable-2 @item]");a("selectorRubyBlock","[tag %a.selector\x3d] [variable-2 @item]");a("nestedRubyBlock","[tag %a]",'   [operator \x3d][variable puts] [string "test"]');a("multilinePlaintext",
"[tag %p]","  Hello,","  World");a("multilineRuby","[tag %p]","  [comment -# this is a comment]","     [comment and this is a comment too]","  Date/Time","  [operator -] [variable now] [operator \x3d] [tag DateTime][operator .][variable now]","  [tag %strong\x3d] [variable now]",'  [operator -] [keyword if] [variable now] [operator \x3e] [tag DateTime][operator .][variable parse]([string "December 31, 2006"])','     [operator \x3d][string "Happy"]','     [operator \x3d][string "Belated"]','     [operator \x3d][string "Birthday"]');
a("multilineComment","[comment /]","  [comment Multiline]","  [comment Comment]");a("hamlComment","[comment -# this is a comment]");a("multilineHamlComment","[comment -# this is a comment]","   [comment and this is a comment too]");a("multilineHTMLComment","[comment \x3c!--]","  [comment what a comment]","  [comment --\x3e]");a("hamlAfterRubyTag","[attribute .block]","  [tag %strong\x3d] [variable now]","  [attribute .test]","     [operator \x3d][variable now]","  [attribute .right]");a("stretchedRuby",
'[operator \x3d] [variable puts] [string "Hello"],','   [string "World"]');a("interpolationInHashAttribute",'[tag %div]{[atom :id] [operator \x3d\x3e] [string "#{][variable test][string }_#{][variable ting][string }"]} test');a("interpolationInHTMLAttribute",'[tag %div]([variable title][operator \x3d][string "#{][variable test][string }_#{][variable ting]()[string }"]) Test')})()});
//# sourceMappingURL=test.js.map