//>>built
define("codemirror4/test/lint/lint",["dojo","dijit","dojox"],function(w,z,A){function k(b){function m(a,b){var c;if(c="Identifier"==a.type)if(c=!(a.name in r)){a:{for(c=b;c;c=c.prev)if(a.name in c.vars){c=!0;break a}c=void 0}c=!c}c&&(d=r[a.name]=!0)}function f(a){if(a.init&&"VariableDeclaration"==a.init.type){var b=a.init.declarations[0].id.name;h.recursive(a.body,null,{Function:function(){},VariableDeclaration:function(a,e,m){for(var f=0;f<a.declarations.length;f++)a.declarations[f].id.name==b&&
(d=!0);h.base.VariableDeclaration(a,e,m)}})}}var g=n.readFileSync(b,"utf8"),e;if(e=g.match(/[\x00-\x08\x0b\x0c\x0e-\x19\uFEFF\t]|[ \t]\n/))"\t"==e[0]||-1<e[0].indexOf("\n")||e[0].charCodeAt(0),e=s.getLineInfo(g,e.index),d=!0;var k=Object.create(null);try{var l=s.parse(g,{locations:!0,ecmaVersion:3,strictSemicolons:!0,allowTrailingCommas:!1,forbidReserved:"everywhere",sourceFile:b})}catch(w){d=!0;return}var p=[];h.simple(l,{ScopeBody:function(a,b){a.scope=b;p.push(b)}},h.scopeVisitor,{vars:Object.create(null)});
var r=Object.create(null);h.simple(l,{UpdateExpression:function(a,b){m(a.argument,b)},AssignmentExpression:function(a,b){m(a.left,b)},Identifier:function(a,b){if("arguments"!=a.name){for(var c=b;c;c=c.prev)if(a.name in c.vars){c.vars[a.name].used=!0;return}k[a.name]=a.loc}},FunctionExpression:function(a){a.id&&(d=!0)},ForStatement:function(a){f(a)},MemberExpression:function(a){"Identifier"==a.object.type&&("console"==a.object.name&&!a.computed)&&(d=!0)},DebuggerStatement:function(a){d=!0}},x);var u=
Object.create(t),v;(v=g.match(/\/\/ declare global:\s+(.*)/))&&v[1].split(/,\s*/g).forEach(function(a){u[a]=!0});for(var y in k)y in u||(d=!0);for(b=0;b<p.length;++b){var g=p[b],q;for(q in g.vars)e=g.vars[q],!e.used&&("catch clause"!=e.type&&"function name"!=e.type&&"_"!=q.charAt(0))&&(d=!0)}}function l(b){n.readdirSync(b).forEach(function(d){var f=b+"/"+d;/\.js$/.test(d)?k(f):"dep"!=d&&n.lstatSync(f).isDirectory()&&l(f)})}var t=Object.create(null);"Error RegExp Number String Array Function Object Math Date undefined parseInt parseFloat Infinity NaN isNaN window document navigator prompt alert confirm console FileReader Worker postMessage importScripts setInterval clearInterval setTimeout clearTimeout CodeMirror test exports require module define".split(" ").forEach(function(b){t[b]=
!0});var n=require("fs"),s=require("./acorn.js"),h=require("./walk.js"),x=h.make({ScopeBody:function(b,d,f){f(b,b.scope)}}),d=!1;exports.checkDir=l;exports.checkFile=k;exports.success=function(){return!d}});
//# sourceMappingURL=lint.js.map